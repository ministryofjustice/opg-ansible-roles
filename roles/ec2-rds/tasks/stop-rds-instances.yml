---

# This set of tasks uses the aws cli as the commands are not supported yet in ansible or ansible extra modules

#Check the state of our running db, we grep the ling that contains our db status to make it a simpler test
- name: Get RDS instance state
  shell: "aws rds describe-db-instances --filters
            Name=db-instance-id,Values={{ rds_instance_data.db_name + '-' + opg_data.stack  }}
            --output json | grep DBInstanceStatus"
  register: rds_instance_facts

# Set RDS state to stopped
- block:

    - name: Stop our database
      command: "aws rds stop-db-instance
                --db-instance-identifier {{ rds_instance_data.db_name + '-' + opg_data.stack  }}"
      when: not rds_instance_data.rds_snapshot_name|default(False)
      register: rds_instance_status

    - name: Stop our database
      command: "aws rds stop-db-instance
                --db-instance-identifier {{ rds_instance_data.db_name + '-' + opg_data.stack  }}
                --db-snapshot-identifier {{ rds_instance_data.rds_snapshot_name }}"
      when: rds_instance_data.rds_snapshot_name|default(False)
      register: rds_instance_status
  when:
    - stop_stack|default(False)
    - rds_instance_facts.stdout|search('available')

