---
- name: Get account id data
  shell: aws iam list-users --output json | grep Arn | cut -d ':' -f 6 | uniq
  register: account_id
  check_mode: no
  no_log: true
  changed_when: false
  tags:
    - always

- name: Make accountid value available
  set_fact:
    aws_acc_id: "{{ account_id.stdout }}"
  check_mode: no
  no_log: true
  changed_when: false
  tags:
    - always

- name: Retrieve vpc level instance facts
  ec2_remote_facts:
    filters:
      instance-state-name: running
      "tag:Stack": "{{ vpc_name }}"
  register: vpc_instance_facts
  tags:
    - always

- name: Retrieve target level instance facts
  ec2_remote_facts:
    filters:
      instance-state-name: running
      "tag:Stack": "{{ target }}"
  register: target_instance_facts
  tags:
    - always

- name: Add jumphost to runtime group for later usage
  add_host:
    name: "jump.{{ vpc_name }}.{{ opg_data.domain }}"
    groups: "vpc, jumphost"
    hostname: "jump.{{ vpc_name }}.{{ opg_data.domain }}"
    ansible_user: "{{ ssh_prov_user|default('jenkins-agent') }}"
    ansible_ssh_common_args: "{{ ssh_conn_opts| default(omit) }}"
  tags:
    - always

- name: Add vpc level instances to runtime group for later usage
  add_host:
    name: "{{ item.tags.Name }}.internal"
    groups: "{{ item.tags.Stack  + '_' + item.tags.Role | default('unknown') }} "
    hostname: "{{ item.private_ip_address }}"
    ansible_user: "{{ ssh_prov_user|default('jenkins-agent') }}"
    ansible_ssh_common_args: "{{ ssh_conn_opts| default(omit) }}"
    create_time: "{{ item.launch_time | default(omit) }}"
  with_items: "{{ vpc_instance_facts.instances | default([]) }}"
  no_log: true
  tags:
    - always

- name: Add target level instances to runtime group for later usage
  add_host:
    name: "{{ item.tags.Name }}.internal"
    groups: "{{ item.tags.Stack  + '_' + item.tags.Role | default('unknown')}} "
    hostname: "{{ item.private_ip_address }}"
    ansible_user: "{{ ssh_prov_user|default('jenkins-agent') }}"
    ansible_ssh_common_args: "{{ ssh_conn_opts| default(omit) }}"
    create_time: "{{ item.launch_time | default(omit) }}"
  with_items: "{{ target_instance_facts.instances | default([]) }}"
  no_log: true
  tags:
    - always

- name: Get details of zones for stack
  route53_facts:
    query: hosted_zone
  register: hosted_zones
  tags:
    - always

- name: expose public zone id
  set_fact:
    external_zone_id: "{{ hosted_zones | get_zone_id(opg_data.domain) | default(None) }}"
  tags:
    - always

- name: expose private zone id
  set_fact:
    internal_zone_id: "{{ hosted_zones | get_zone_id(target + '.internal') | default(None) }}"

- name: Add target instances to group for configuration
  add_host:
#    name: "{{ item.tags.Role + '-'+ item.id | regex_replace('^i-','') }}"
    name: "{{ item.private_ip_address }}"
    groups: "{{ item.tags.Stack  + '_' + item.tags.Role | default('unknown')}}, {{ target }}, {{ opg_data.environment }} "
    hostname: "{{ item.private_ip_address }}"
    ansible_user: "{{ ssh_prov_user|default('jenkins-agent') }}"
    ansible_ssh_common_args: "{{ ssh_conn_opts| default(omit) }}"
    create_time: "{{ item.launch_time | default(omit) }}"
  with_items: "{{ target_instance_facts.instances | default([]) }}"
  no_log: true
  tags:
    - always
