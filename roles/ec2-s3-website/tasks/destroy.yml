---

- block:
    - name: Retrieve our cloudfront distro if it exists
      cloudfront_facts:
        distribution: true
        domain_name_alias: "{{ s3_site_data.bucket.name }}"
      register: cf_facts

    - name: Set fact if we have have a cloudfront distribution
      set_fact:
        cf_exists: "{{ cf_facts['ansible_facts']['cloudfront'][s3_site_data.bucket.name]['Distribution']['Id'] is defined }}"

    - name: Remove distribution with custom certificate
      cloudfront:
        type: distribution
        state: absent
        resource_id: "{{ cf_facts['ansible_facts']['cloudfront'][s3_site_data.bucket.name]['Distribution']['Id'] }}"
        wait_for_deployed: yes
        # 30 minutes, each retry is on a 30 second cycle
        wait_for_retries: 60
      register: cf_removal
      when: cf_exists
  rescue:
    - debug:
        msg: "No cloudfront instances appear to be configured"
  when: s3_site_data.has_cloudfront|default(False)

- name: "Remove route53 aliases for the {{ s3_site_data.bucket.name }} bucket"
  route53:
    alias: True
    zone: "{{ opg_data.domain }}"
    record: "{{ s3_site_data.bucket.name }}"
    type: A
    value: "s3-website.{{ s3_site_data.region }}.amazonaws.com."
    alias_hosted_zone_id: "{{ s3_alias_zone_id }}"
    command: delete

- name: "Remove route53 aliases for the {{ item }} bucket"
  route53:
    alias: True
    zone: "{{ opg_data.domain }}"
    record: "{{ item }}"
    type: A
    value: "s3-website.{{ s3_site_data.region }}.amazonaws.com."
    alias_hosted_zone_id: "{{ s3_alias_zone_id }}"
    command: delete
  with_items: "{{ s3_site_data.aliases|default([]) }}"

- name: "Remove s3 alias hosting"
  s3_website:
    name: "{{ item }}"
    state: absent
  with_items: "{{ s3_site_data.aliases|default([]) }}"

- name: "Removing S3 hosting from bucket {{ s3_site_data.bucket.name }}"
  s3_website:
    name: "{{ s3_site_data.bucket.name }}"
    state: absent

- name: "Removing S3 alias bucket {{ item }}"
  s3_bucket:
    name: "{{ item }}"
    state: absent
    region: "{{ s3_site_data.region | default(omit) }}"
    force: yes
  with_items: "{{ s3_site_data.aliases|default([]) }}"

- name: "Removing S3 bucket {{ s3_site_data.bucket.name }}"
  s3_bucket:
    name: "{{ s3_site_data.bucket.name }}"
    state: absent
    region: "{{ s3_site_data.region | default(omit) }}"
    force: yes
