---

- name: Set bucket policy string
  set_fact:
    bucket_policy_string:  "{{ lookup('template', s3_site_data.bucket.policy) | to_json }}"
  when: "'policy' in s3_site_data.bucket"

- name: "Creating S3 bucket {{ s3_site_data.bucket.name }}"
  s3_bucket:
    name: "{{ s3_site_data.bucket.name }}"
    state: present
    policy: "{{ bucket_policy_string | default(omit) }}"
    versioning: "{{ s3_site_data.bucket.versioning | default(false)}}"
    region: "{{ s3_site_data.region | default(omit) }}"
    tags:
      stack: "{{ opg_data.stack }}"
      name: "{{ s3_site_data.name }}"
  register: s3_bucket_created

- Name: Deploy our code
  include: deploy_site.yml

- name: Create our s3 site
  s3_website:
    name: "{{ s3_site_data.bucket.name }}"
    suffix: "{{ s3_site_data.index_page | default('index.html') }}"
    error_key: "{{ s3_site_data.error_page | default('index.html') }}"
    region: "{{ s3_site_data.region | default(omit) }}"
    state: present

- block:
    - name: msg="Create cloudfront distribution"
      include: "cloudfront.yml"
  when: s3_site_data.has_cloudfront|default(False) and not skip_create_distribution|default(False)

- block:
    - name: msg="Create cloudfront path with aliases"
      include: "cloudfront-aliases.yml"
  when: s3_site_data.has_cloudfront|default(False) and not skip_route53|default(False)

- block:
    - name: "Create route53 aliases for the {{ s3_site_data.bucket.name }} bucket"
      route53:
        alias: True
        zone: "{{ opg_data.domain }}"
        record: "{{ s3_site_data.bucket.name }}"
        type: A
        value: "s3-website.{{ s3_site_data.region }}.amazonaws.com."
        alias_hosted_zone_id: "{{ s3_alias_zone_id }}"
        command: create
        overwrite: true

    - name: "Create route53 aliases for the {{ item }} bucket"
      route53:
        alias: True
        zone: "{{ opg_data.domain }}"
        record: "{{ item }}"
        type: A
        value: "s3-website.{{ s3_site_data.region }}.amazonaws.com."
        alias_hosted_zone_id: "{{ s3_alias_zone_id }}"
        command: create
        overwrite: true
      with_items: "{{ s3_site_data.aliases|default([]) }}"

  when: not skip_route53|default(False) and not s3_site_data.has_cloudfront|default(False)

- name: "Output our s3 default url"
  debug:
    msg: "http://{{ s3_site_data.bucket.name }}.s3-website.{{ s3_site_data.region }}.amazonaws.com"

- block:
    - name: "Output our route53 url"
      debug:
        msg: "http://{{ s3_site_data.bucket.name }}"

    - name: "Output alias urls"
      debug:
        msg: "https://{{ item }}"
      with_items: "{{ s3_site_data.aliases|default([]) }}"

  when: not skip_route53|default(False)

- block:
    - name: Retrieve our cloudfront distro if it exists
      cloudfront_facts:
        distribution: true
        domain_name_alias: "{{ s3_site_data.bucket.name }}"
      register: cf_facts
      when: not skip_route53|default(False)

    - name: Extract our cloudfront domain
      set_fact:
        cf_domain: "{{ cf_facts['ansible_facts']['cloudfront'][s3_site_data.bucket.name]['Distribution']['DomainName'] }}"
      when: not skip_route53|default(False)

    - name: "Output our cloudfront url"
      debug:
        msg: "{{ cf_domain }}"
  when: s3_site_data.has_cloudfront|default(False)
