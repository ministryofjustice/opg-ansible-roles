---

- block:
    - block:
        - name: Create security group for asg
          ec2_group:
            name: "{{ appdata.asg.asg_sg.name }}"
            description: "{{ appdata.asg.asg_sg.desc }}"
            rules: "{{ appdata.asg.asg_sg.ruleset | rules_from_dict(client_sg_ids.security_groups, appdata.asg.asg_sg.client_sg) }}"
            rules_egress: []
            vpc_id: "{{ vpc_id }}"
          register: asg_security_group_1
      when: appdata.asg.asg_sg.client_sg is defined

    - block:
        - name: Create security group for asg
          ec2_group:
            name: "{{ appdata.asg.asg_sg.name }}"
            description: "{{ appdata.asg.asg_sg.desc }}"
            rules: "{{ appdata.asg.asg_sg.ruleset | rules_from_dict() }}"
            rules_egress: []
            vpc_id: "{{ vpc_id }}"
          register: asg_security_group_2

      when: appdata.asg.asg_sg.client_sg is undefined

    - name: Add tags until 2.2
      ec2_tag:
        resource: "{{ asg_security_group_2.group_id | default(asg_security_group_1.group_id) }}"
        state: present
        tags: "{{ vpc.env_tags | combine({'Name': appdata.asg.asg_sg.name}) }}"

  when: appdata.asg.asg_sg is defined