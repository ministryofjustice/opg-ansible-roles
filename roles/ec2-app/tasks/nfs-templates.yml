- block:
  - name: Set nfs host
    set_fact:
      nfs_host: "{{ groups['nfs-' + target][0] }}"

  - name: Set launch time
    set_fact:
      nfs_launch_time: "{{ hostvars[nfs_host]['create_time'][0:19]|regex_replace('T|Z', ' ') }}"
      nfs_owner: false
      nfs_group: false
      nfs_mode: false

  - block:
    - name: Set nfs owner
      set_fact:
        nfs_owner: "{{ appdata.nfs_template_ownership.owner }}"
      when: "'owner' in appdata.nfs_template_ownership"

    - name: Set nfs group name
      set_fact:
        nfs_group: "{{ appdata.nfs_template_ownership.group }}"
      when: "'group' in appdata.nfs_template_ownership"

    - name: Set nfs mode
      set_fact:
        nfs_mode: "{{ appdata.nfs_template_ownership.mode }}"
      when: "'mode' in appdata.nfs_template_ownership"
    when:
      - " appdata is defined "
      - " 'nfs_template_ownership' in appdata "

  - name: Print nfs template overide defaults for readability.
    debug:
      msg: " nfs template user:group:mode overide defaults of {{ nfs_owner |default('False', true) }},{{ nfs_group |default('False', true) }},{{ nfs_mode |default('False', true) }}"


  # Ensure both times are UTC for comparison. AWS currently returns zulu time (UTC).
  - name: Test that NFS server is older than 6 minutes
    shell: date --utc +'%Y-%m-%d %H:%M:%S'
    register: nfs_ready
    until: ((nfs_ready.stdout|to_datetime('%Y-%m-%d %H:%M:%S')) - (nfs_launch_time|to_datetime('%Y-%m-%d %H:%M:%S'))).total_seconds()|int > nfs_wait|default(360)
    retries: 13
    delay: 30
    tags:
      - skip_ansible_lint

  - name: Ensure symlink nsfdata to data on NFS server
    file:
      src: '/data'
      dest: '/nfsdata'
      state: link
    delegate_to: "{{ groups[ 'nfs-' + target ][0] }}"
    become: true

  - name: Ensure template paths are created on NFS server
    file:
      state: directory
      follow: yes
      owner: "{{ nfs_owner | default(omit, true) }}"
      group: "{{ nfs_group| default(omit, true) }}"
      mode: "{{ nfs_mode | default(omit, true) }}"
      path: "{{item.filepath | dirname}}"
    delegate_to: "{{ groups[ 'nfs-' + target ][0] }}"
    become: true
    with_items: "{{ appdata.nfs_templates }}"

  - name: Create templates on NFS
    template:
      src: "{{item.sourceTemplate}}"
      dest: "{{item.filepath}}"
      owner: "{{ nfs_owner | default(omit, true) }}"
      group: "{{ nfs_group| default(omit, true) }}"
      mode: "{{ nfs_mode | default(omit, true) }}"
    with_items: "{{ appdata.nfs_templates }}"
    when:
      - item.sourceTemplate != "directoryonly"
      - item.sourceTemplate != "copyonly"
    delegate_to: "{{ groups[ 'nfs-' + target ][0] }}"
    become: true

  - name: Copy files to NFS
    copy:
      src: "{{ inventory_dir }}/../ansible-files/{{item.sourcefile}}"
      dest: "{{item.filepath}}"
      owner: "{{ nfs_owner | default(omit, true) }}"
      group: "{{ nfs_group| default(omit, true) }}"
      mode: "{{ nfs_mode | default(omit, true) }}"
    with_items: "{{ appdata.nfs_templates }}"
    when:
      - item.sourceTemplate == "copyonly"
      - item.sourcefile is defined
    delegate_to: "{{ groups[ 'nfs-' + target ][0] }}"
    become: true
  when:
    - appdata.nfs_templates is defined
    - appdata.nfs_templates | count > 0
